{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0143586\\\\.vscode\\\\work\\\\chart-dashboard\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport FullChartView from \"./components/FullChartView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedChart, setSelectedChart] = useState(null);\n  const handleChartSelect = chartType => {\n    setSelectedChart(chartType);\n  };\n  const handleCloseChart = () => {\n    setSelectedChart(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Interactive Chart Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        onChartSelect: handleChartSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), selectedChart && /*#__PURE__*/_jsxDEV(FullChartView, {\n        chartType: selectedChart,\n        onClose: handleCloseChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aUWFttfEK4FZJc4rwAYbwYErTN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Dashboard","FullChartView","jsxDEV","_jsxDEV","App","_s","selectedChart","setSelectedChart","handleChartSelect","chartType","handleCloseChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChartSelect","onClose","_c","$RefreshReg$"],"sources":["C:/Users/0143586/.vscode/work/chart-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport FullChartView from \"./components/FullChartView\";\r\n\r\nexport type ChartType = \"wordsToReview\" | \"misspellings\" | \"totalCounts\" | null;\r\n\r\nfunction App() {\r\n  const [selectedChart, setSelectedChart] = useState<ChartType>(null);\r\n\r\n  const handleChartSelect = (chartType: ChartType) => {\r\n    setSelectedChart(chartType);\r\n  };\r\n\r\n  const handleCloseChart = () => {\r\n    setSelectedChart(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Interactive Chart Dashboard</h1>\r\n      </header>\r\n      <main>\r\n        <Dashboard onChartSelect={handleChartSelect} />\r\n        {selectedChart && (\r\n          <FullChartView chartType={selectedChart} onClose={handleCloseChart} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAY,IAAI,CAAC;EAEnE,MAAMS,iBAAiB,GAAIC,SAAoB,IAAK;IAClDF,gBAAgB,CAACE,SAAS,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BT,OAAA;QAAAS,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACTb,OAAA;MAAAS,QAAA,gBACET,OAAA,CAACH,SAAS;QAACiB,aAAa,EAAET;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC9CV,aAAa,iBACZH,OAAA,CAACF,aAAa;QAACQ,SAAS,EAAEH,aAAc;QAACY,OAAO,EAAER;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACtE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACX,EAAA,CAxBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}