{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0143586\\\\.vscode\\\\work\\\\chart-dashboard\\\\src\\\\components\\\\FullChartView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { wordsToReviewData, misspellingsData, totalCountsData, chartColors } from \"../data/chartData\";\nimport \"./FullChartView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst FullChartView = ({\n  chartType,\n  onClose\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const [showTable, setShowTable] = React.useState(false);\n  const handleDownload = () => {\n    const chart = chartRef.current;\n    if (chart) {\n      // Get the canvas element\n      const canvas = chart.canvas;\n\n      // Create a new canvas with white background\n      const newCanvas = document.createElement(\"canvas\");\n      const newCtx = newCanvas.getContext(\"2d\");\n      if (newCtx) {\n        // Set the same dimensions\n        newCanvas.width = canvas.width;\n        newCanvas.height = canvas.height;\n\n        // Fill with white background\n        newCtx.fillStyle = \"#ffffff\";\n        newCtx.fillRect(0, 0, newCanvas.width, newCanvas.height);\n\n        // Draw the original chart on top\n        newCtx.drawImage(canvas, 0, 0);\n\n        // Create download link\n        const url = newCanvas.toDataURL(\"image/png\");\n        const link = document.createElement(\"a\");\n        link.download = `${getChartTitle().replace(/\\s+/g, \"_\")}.png`;\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n  const getChartData = () => {\n    switch (chartType) {\n      case \"wordsToReview\":\n        return {\n          labels: wordsToReviewData.map(item => item.month),\n          datasets: [{\n            label: \"Legal\",\n            data: wordsToReviewData.map(item => item.legal),\n            backgroundColor: chartColors.legal\n          }, {\n            label: \"Legal UK\",\n            data: wordsToReviewData.map(item => item.legalUK),\n            backgroundColor: chartColors.legalUK\n          }, {\n            label: \"TR Canada\",\n            data: wordsToReviewData.map(item => item.trCanada),\n            backgroundColor: chartColors.trCanada\n          }, {\n            label: \"Tax & Accounting\",\n            data: wordsToReviewData.map(item => item.taxAccounting),\n            backgroundColor: chartColors.taxAccounting\n          }, {\n            label: \"Thomson Reuters\",\n            data: wordsToReviewData.map(item => item.thomsonReuters),\n            backgroundColor: chartColors.thomsonReuters\n          }]\n        };\n      case \"misspellings\":\n        return {\n          labels: misspellingsData.map(item => item.month),\n          datasets: [{\n            label: \"Legal\",\n            data: misspellingsData.map(item => item.legal),\n            backgroundColor: chartColors.legal\n          }, {\n            label: \"Legal UK\",\n            data: misspellingsData.map(item => item.legalUK),\n            backgroundColor: chartColors.legalUK\n          }, {\n            label: \"TR Canada\",\n            data: misspellingsData.map(item => item.trCanada),\n            backgroundColor: chartColors.trCanada\n          }, {\n            label: \"Tax & Accounting\",\n            data: misspellingsData.map(item => item.taxAccounting),\n            backgroundColor: chartColors.taxAccounting\n          }, {\n            label: \"Thomson Reuters\",\n            data: misspellingsData.map(item => item.thomsonReuters),\n            backgroundColor: chartColors.thomsonReuters\n          }]\n        };\n      case \"totalCounts\":\n        return {\n          labels: totalCountsData.map(item => item.month),\n          datasets: [{\n            label: \"Misspellings\",\n            data: totalCountsData.map(item => item.misspellings),\n            backgroundColor: chartColors.misspellings\n          }, {\n            label: \"Words to Review\",\n            data: totalCountsData.map(item => item.wordsToReview),\n            backgroundColor: chartColors.wordsToReview\n          }, {\n            label: \"Approved Words\",\n            data: totalCountsData.map(item => item.approvedWords),\n            backgroundColor: chartColors.approvedWords\n          }]\n        };\n      default:\n        return {\n          labels: [],\n          datasets: []\n        };\n    }\n  };\n  const getTableData = () => {\n    switch (chartType) {\n      case \"wordsToReview\":\n        return {\n          data: wordsToReviewData,\n          categories: [{\n            key: \"legal\",\n            label: \"Legal\",\n            color: chartColors.legal\n          }, {\n            key: \"legalUK\",\n            label: \"Legal UK\",\n            color: chartColors.legalUK\n          }, {\n            key: \"trCanada\",\n            label: \"TR Canada\",\n            color: chartColors.trCanada\n          }, {\n            key: \"taxAccounting\",\n            label: \"Tax & Accounting\",\n            color: chartColors.taxAccounting\n          }, {\n            key: \"thomsonReuters\",\n            label: \"Thomson Reuters\",\n            color: chartColors.thomsonReuters\n          }]\n        };\n      case \"misspellings\":\n        return {\n          data: misspellingsData,\n          categories: [{\n            key: \"legal\",\n            label: \"Legal\",\n            color: chartColors.legal\n          }, {\n            key: \"legalUK\",\n            label: \"Legal UK\",\n            color: chartColors.legalUK\n          }, {\n            key: \"trCanada\",\n            label: \"TR Canada\",\n            color: chartColors.trCanada\n          }, {\n            key: \"taxAccounting\",\n            label: \"Tax & Accounting\",\n            color: chartColors.taxAccounting\n          }, {\n            key: \"thomsonReuters\",\n            label: \"Thomson Reuters\",\n            color: chartColors.thomsonReuters\n          }]\n        };\n      case \"totalCounts\":\n        return {\n          data: totalCountsData,\n          categories: [{\n            key: \"misspellings\",\n            label: \"Misspellings\",\n            color: chartColors.misspellings\n          }, {\n            key: \"wordsToReview\",\n            label: \"Words to Review\",\n            color: chartColors.wordsToReview\n          }, {\n            key: \"approvedWords\",\n            label: \"Approved Words\",\n            color: chartColors.approvedWords\n          }]\n        };\n      default:\n        return {\n          data: [],\n          categories: []\n        };\n    }\n  };\n  const getChartTitle = () => {\n    switch (chartType) {\n      case \"wordsToReview\":\n        return \"Words to Review Count By Monthly\";\n      case \"misspellings\":\n        return \"Misspellings Count By Monthly\";\n      case \"totalCounts\":\n        return \"Total Monthly Counts Across All 5 Websites\";\n      default:\n        return \"\";\n    }\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    backgroundColor: \"#ffffff\",\n    plugins: {\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 20,\n          usePointStyle: true\n        }\n      },\n      title: {\n        display: true,\n        text: getChartTitle(),\n        font: {\n          size: 18,\n          weight: \"bold\"\n        },\n        padding: {\n          top: 10,\n          bottom: 30\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Month\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Count\"\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  const tableData = getTableData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-chart-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-chart-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: handleDownload,\n        children: \"\\uD83D\\uDCE5 Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-table-btn\",\n        onClick: () => setShowTable(!showTable),\n        children: [\"\\uD83D\\uDCCA \", showTable ? \"Hide Table\" : \"View Table\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            ref: chartRef,\n            data: getChartData(),\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), showTable && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-section\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"data-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), tableData.data.map(item => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: item.month\n                }, item.month, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tableData.categories.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"category-label\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"category-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"color-indicator\",\n                      style: {\n                        backgroundColor: category.color\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this), category.label]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), tableData.data.map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"data-cell\",\n                  children: item[category.key]\n                }, `${category.key}-${item.month}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 25\n                }, this))]\n              }, category.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(FullChartView, \"lxhO+kPzTJ20DmfzxJltULE/sBg=\");\n_c = FullChartView;\nexport default FullChartView;\nvar _c;\n$RefreshReg$(_c, \"FullChartView\");","map":{"version":3,"names":["React","useRef","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","wordsToReviewData","misspellingsData","totalCountsData","chartColors","jsxDEV","_jsxDEV","register","FullChartView","chartType","onClose","_s","chartRef","showTable","setShowTable","useState","handleDownload","chart","current","canvas","newCanvas","document","createElement","newCtx","getContext","width","height","fillStyle","fillRect","drawImage","url","toDataURL","link","download","getChartTitle","replace","href","body","appendChild","click","removeChild","getChartData","labels","map","item","month","datasets","label","data","legal","backgroundColor","legalUK","trCanada","taxAccounting","thomsonReuters","misspellings","wordsToReview","approvedWords","getTableData","categories","key","color","options","responsive","maintainAspectRatio","plugins","legend","position","padding","usePointStyle","title","display","text","font","size","weight","top","bottom","scales","x","y","beginAtZero","tableData","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","category","style","_c","$RefreshReg$"],"sources":["C:/Users/0143586/.vscode/work/chart-dashboard/src/components/FullChartView.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { ChartType } from \"../App\";\r\nimport {\r\n  wordsToReviewData,\r\n  misspellingsData,\r\n  totalCountsData,\r\n  chartColors,\r\n} from \"../data/chartData\";\r\nimport \"./FullChartView.css\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface FullChartViewProps {\r\n  chartType: ChartType;\r\n  onClose: () => void;\r\n}\r\n\r\nconst FullChartView: React.FC<FullChartViewProps> = ({\r\n  chartType,\r\n  onClose,\r\n}) => {\r\n  const chartRef = useRef<any>(null);\r\n  const [showTable, setShowTable] = React.useState(false);\r\n\r\n  const handleDownload = () => {\r\n    const chart = chartRef.current;\r\n    if (chart) {\r\n      // Get the canvas element\r\n      const canvas = chart.canvas;\r\n\r\n      // Create a new canvas with white background\r\n      const newCanvas = document.createElement(\"canvas\");\r\n      const newCtx = newCanvas.getContext(\"2d\");\r\n\r\n      if (newCtx) {\r\n        // Set the same dimensions\r\n        newCanvas.width = canvas.width;\r\n        newCanvas.height = canvas.height;\r\n\r\n        // Fill with white background\r\n        newCtx.fillStyle = \"#ffffff\";\r\n        newCtx.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n\r\n        // Draw the original chart on top\r\n        newCtx.drawImage(canvas, 0, 0);\r\n\r\n        // Create download link\r\n        const url = newCanvas.toDataURL(\"image/png\");\r\n        const link = document.createElement(\"a\");\r\n        link.download = `${getChartTitle().replace(/\\s+/g, \"_\")}.png`;\r\n        link.href = url;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  };\r\n  const getChartData = () => {\r\n    switch (chartType) {\r\n      case \"wordsToReview\":\r\n        return {\r\n          labels: wordsToReviewData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Legal\",\r\n              data: wordsToReviewData.map((item) => item.legal),\r\n              backgroundColor: chartColors.legal,\r\n            },\r\n            {\r\n              label: \"Legal UK\",\r\n              data: wordsToReviewData.map((item) => item.legalUK),\r\n              backgroundColor: chartColors.legalUK,\r\n            },\r\n            {\r\n              label: \"TR Canada\",\r\n              data: wordsToReviewData.map((item) => item.trCanada),\r\n              backgroundColor: chartColors.trCanada,\r\n            },\r\n            {\r\n              label: \"Tax & Accounting\",\r\n              data: wordsToReviewData.map((item) => item.taxAccounting),\r\n              backgroundColor: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              label: \"Thomson Reuters\",\r\n              data: wordsToReviewData.map((item) => item.thomsonReuters),\r\n              backgroundColor: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"misspellings\":\r\n        return {\r\n          labels: misspellingsData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Legal\",\r\n              data: misspellingsData.map((item) => item.legal),\r\n              backgroundColor: chartColors.legal,\r\n            },\r\n            {\r\n              label: \"Legal UK\",\r\n              data: misspellingsData.map((item) => item.legalUK),\r\n              backgroundColor: chartColors.legalUK,\r\n            },\r\n            {\r\n              label: \"TR Canada\",\r\n              data: misspellingsData.map((item) => item.trCanada),\r\n              backgroundColor: chartColors.trCanada,\r\n            },\r\n            {\r\n              label: \"Tax & Accounting\",\r\n              data: misspellingsData.map((item) => item.taxAccounting),\r\n              backgroundColor: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              label: \"Thomson Reuters\",\r\n              data: misspellingsData.map((item) => item.thomsonReuters),\r\n              backgroundColor: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"totalCounts\":\r\n        return {\r\n          labels: totalCountsData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Misspellings\",\r\n              data: totalCountsData.map((item) => item.misspellings),\r\n              backgroundColor: chartColors.misspellings,\r\n            },\r\n            {\r\n              label: \"Words to Review\",\r\n              data: totalCountsData.map((item) => item.wordsToReview),\r\n              backgroundColor: chartColors.wordsToReview,\r\n            },\r\n            {\r\n              label: \"Approved Words\",\r\n              data: totalCountsData.map((item) => item.approvedWords),\r\n              backgroundColor: chartColors.approvedWords,\r\n            },\r\n          ],\r\n        };\r\n      default:\r\n        return { labels: [], datasets: [] };\r\n    }\r\n  };\r\n\r\n  const getTableData = () => {\r\n    switch (chartType) {\r\n      case \"wordsToReview\":\r\n        return {\r\n          data: wordsToReviewData,\r\n          categories: [\r\n            { key: \"legal\", label: \"Legal\", color: chartColors.legal },\r\n            { key: \"legalUK\", label: \"Legal UK\", color: chartColors.legalUK },\r\n            {\r\n              key: \"trCanada\",\r\n              label: \"TR Canada\",\r\n              color: chartColors.trCanada,\r\n            },\r\n            {\r\n              key: \"taxAccounting\",\r\n              label: \"Tax & Accounting\",\r\n              color: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              key: \"thomsonReuters\",\r\n              label: \"Thomson Reuters\",\r\n              color: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"misspellings\":\r\n        return {\r\n          data: misspellingsData,\r\n          categories: [\r\n            { key: \"legal\", label: \"Legal\", color: chartColors.legal },\r\n            { key: \"legalUK\", label: \"Legal UK\", color: chartColors.legalUK },\r\n            {\r\n              key: \"trCanada\",\r\n              label: \"TR Canada\",\r\n              color: chartColors.trCanada,\r\n            },\r\n            {\r\n              key: \"taxAccounting\",\r\n              label: \"Tax & Accounting\",\r\n              color: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              key: \"thomsonReuters\",\r\n              label: \"Thomson Reuters\",\r\n              color: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"totalCounts\":\r\n        return {\r\n          data: totalCountsData,\r\n          categories: [\r\n            {\r\n              key: \"misspellings\",\r\n              label: \"Misspellings\",\r\n              color: chartColors.misspellings,\r\n            },\r\n            {\r\n              key: \"wordsToReview\",\r\n              label: \"Words to Review\",\r\n              color: chartColors.wordsToReview,\r\n            },\r\n            {\r\n              key: \"approvedWords\",\r\n              label: \"Approved Words\",\r\n              color: chartColors.approvedWords,\r\n            },\r\n          ],\r\n        };\r\n      default:\r\n        return { data: [], categories: [] };\r\n    }\r\n  };\r\n\r\n  const getChartTitle = () => {\r\n    switch (chartType) {\r\n      case \"wordsToReview\":\r\n        return \"Words to Review Count By Monthly\";\r\n      case \"misspellings\":\r\n        return \"Misspellings Count By Monthly\";\r\n      case \"totalCounts\":\r\n        return \"Total Monthly Counts Across All 5 Websites\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    backgroundColor: \"#ffffff\",\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\" as const,\r\n        labels: {\r\n          padding: 20,\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: getChartTitle(),\r\n        font: {\r\n          size: 18,\r\n          weight: \"bold\" as const,\r\n        },\r\n        padding: {\r\n          top: 10,\r\n          bottom: 30,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Month\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Count\",\r\n        },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const tableData = getTableData();\r\n\r\n  return (\r\n    <div className=\"full-chart-overlay\">\r\n      <div className=\"full-chart-modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ×\r\n        </button>\r\n        <button className=\"download-btn\" onClick={handleDownload}>\r\n          📥 Download\r\n        </button>\r\n        <button\r\n          className=\"view-table-btn\"\r\n          onClick={() => setShowTable(!showTable)}\r\n        >\r\n          📊 {showTable ? \"Hide Table\" : \"View Table\"}\r\n        </button>\r\n        <div className=\"full-chart-container\">\r\n          <div className=\"chart-section\">\r\n            <Bar ref={chartRef} data={getChartData()} options={options} />\r\n          </div>\r\n          {showTable && (\r\n            <div className=\"table-section\">\r\n              <table className=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th></th>\r\n                    {tableData.data.map((item: any) => (\r\n                      <th key={item.month}>{item.month}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tableData.categories.map((category: any) => (\r\n                    <tr key={category.key}>\r\n                      <td className=\"category-label\">\r\n                        <div className=\"category-item\">\r\n                          <div\r\n                            className=\"color-indicator\"\r\n                            style={{ backgroundColor: category.color }}\r\n                          ></div>\r\n                          {category.label}\r\n                        </div>\r\n                      </td>\r\n                      {tableData.data.map((item: any) => (\r\n                        <td\r\n                          key={`${category.key}-${item.month}`}\r\n                          className=\"data-cell\"\r\n                        >\r\n                          {item[category.key]}\r\n                        </td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullChartView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}