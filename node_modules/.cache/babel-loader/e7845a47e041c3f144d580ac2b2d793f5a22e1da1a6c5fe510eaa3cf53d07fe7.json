{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0143586\\\\.vscode\\\\work\\\\chart-dashboard\\\\src\\\\components\\\\ChartThumbnail.tsx\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { wordsToReviewData, misspellingsData, totalCountsData, chartColors } from \"../data/chartData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ChartThumbnail = ({\n  chartType\n}) => {\n  const getChartData = () => {\n    switch (chartType) {\n      case \"wordsToReview\":\n        return {\n          labels: wordsToReviewData.map(item => item.month),\n          datasets: [{\n            label: \"Legal\",\n            data: wordsToReviewData.map(item => item.legal),\n            backgroundColor: chartColors.legal\n          }, {\n            label: \"Legal UK\",\n            data: wordsToReviewData.map(item => item.legalUK),\n            backgroundColor: chartColors.legalUK\n          }, {\n            label: \"TR Canada\",\n            data: wordsToReviewData.map(item => item.trCanada),\n            backgroundColor: chartColors.trCanada\n          }, {\n            label: \"Tax & Accounting\",\n            data: wordsToReviewData.map(item => item.taxAccounting),\n            backgroundColor: chartColors.taxAccounting\n          }, {\n            label: \"Thomson Reuters\",\n            data: wordsToReviewData.map(item => item.thomsonReuters),\n            backgroundColor: chartColors.thomsonReuters\n          }]\n        };\n      case \"misspellings\":\n        return {\n          labels: misspellingsData.map(item => item.month),\n          datasets: [{\n            label: \"Legal\",\n            data: misspellingsData.map(item => item.legal),\n            backgroundColor: chartColors.legal\n          }, {\n            label: \"Legal UK\",\n            data: misspellingsData.map(item => item.legalUK),\n            backgroundColor: chartColors.legalUK\n          }, {\n            label: \"TR Canada\",\n            data: misspellingsData.map(item => item.trCanada),\n            backgroundColor: chartColors.trCanada\n          }, {\n            label: \"Tax & Accounting\",\n            data: misspellingsData.map(item => item.taxAccounting),\n            backgroundColor: chartColors.taxAccounting\n          }, {\n            label: \"Thomson Reuters\",\n            data: misspellingsData.map(item => item.thomsonReuters),\n            backgroundColor: chartColors.thomsonReuters\n          }]\n        };\n      case \"totalCounts\":\n        return {\n          labels: totalCountsData.map(item => item.month),\n          datasets: [{\n            label: \"Misspellings\",\n            data: totalCountsData.map(item => item.misspellings),\n            backgroundColor: chartColors.misspellings\n          }, {\n            label: \"Words to Review\",\n            data: totalCountsData.map(item => item.wordsToReview),\n            backgroundColor: chartColors.wordsToReview\n          }, {\n            label: \"Approved Words\",\n            data: totalCountsData.map(item => item.approvedWords),\n            backgroundColor: chartColors.approvedWords\n          }]\n        };\n      default:\n        return {\n          labels: [],\n          datasets: []\n        };\n    }\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false // Hide legend in thumbnail\n      },\n      title: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        display: false // Hide x-axis labels in thumbnail\n      },\n      y: {\n        display: false // Hide y-axis labels in thumbnail\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-thumbnail\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: getChartData(),\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartThumbnail;\nexport default ChartThumbnail;\nvar _c;\n$RefreshReg$(_c, \"ChartThumbnail\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","wordsToReviewData","misspellingsData","totalCountsData","chartColors","jsxDEV","_jsxDEV","register","ChartThumbnail","chartType","getChartData","labels","map","item","month","datasets","label","data","legal","backgroundColor","legalUK","trCanada","taxAccounting","thomsonReuters","misspellings","wordsToReview","approvedWords","options","responsive","maintainAspectRatio","plugins","legend","display","title","scales","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/0143586/.vscode/work/chart-dashboard/src/components/ChartThumbnail.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { ChartType } from \"../App\";\r\nimport {\r\n  wordsToReviewData,\r\n  misspellingsData,\r\n  totalCountsData,\r\n  chartColors,\r\n} from \"../data/chartData\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface ChartThumbnailProps {\r\n  chartType: ChartType;\r\n}\r\n\r\nconst ChartThumbnail: React.FC<ChartThumbnailProps> = ({ chartType }) => {\r\n  const getChartData = () => {\r\n    switch (chartType) {\r\n      case \"wordsToReview\":\r\n        return {\r\n          labels: wordsToReviewData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Legal\",\r\n              data: wordsToReviewData.map((item) => item.legal),\r\n              backgroundColor: chartColors.legal,\r\n            },\r\n            {\r\n              label: \"Legal UK\",\r\n              data: wordsToReviewData.map((item) => item.legalUK),\r\n              backgroundColor: chartColors.legalUK,\r\n            },\r\n            {\r\n              label: \"TR Canada\",\r\n              data: wordsToReviewData.map((item) => item.trCanada),\r\n              backgroundColor: chartColors.trCanada,\r\n            },\r\n            {\r\n              label: \"Tax & Accounting\",\r\n              data: wordsToReviewData.map((item) => item.taxAccounting),\r\n              backgroundColor: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              label: \"Thomson Reuters\",\r\n              data: wordsToReviewData.map((item) => item.thomsonReuters),\r\n              backgroundColor: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"misspellings\":\r\n        return {\r\n          labels: misspellingsData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Legal\",\r\n              data: misspellingsData.map((item) => item.legal),\r\n              backgroundColor: chartColors.legal,\r\n            },\r\n            {\r\n              label: \"Legal UK\",\r\n              data: misspellingsData.map((item) => item.legalUK),\r\n              backgroundColor: chartColors.legalUK,\r\n            },\r\n            {\r\n              label: \"TR Canada\",\r\n              data: misspellingsData.map((item) => item.trCanada),\r\n              backgroundColor: chartColors.trCanada,\r\n            },\r\n            {\r\n              label: \"Tax & Accounting\",\r\n              data: misspellingsData.map((item) => item.taxAccounting),\r\n              backgroundColor: chartColors.taxAccounting,\r\n            },\r\n            {\r\n              label: \"Thomson Reuters\",\r\n              data: misspellingsData.map((item) => item.thomsonReuters),\r\n              backgroundColor: chartColors.thomsonReuters,\r\n            },\r\n          ],\r\n        };\r\n      case \"totalCounts\":\r\n        return {\r\n          labels: totalCountsData.map((item) => item.month),\r\n          datasets: [\r\n            {\r\n              label: \"Misspellings\",\r\n              data: totalCountsData.map((item) => item.misspellings),\r\n              backgroundColor: chartColors.misspellings,\r\n            },\r\n            {\r\n              label: \"Words to Review\",\r\n              data: totalCountsData.map((item) => item.wordsToReview),\r\n              backgroundColor: chartColors.wordsToReview,\r\n            },\r\n            {\r\n              label: \"Approved Words\",\r\n              data: totalCountsData.map((item) => item.approvedWords),\r\n              backgroundColor: chartColors.approvedWords,\r\n            },\r\n          ],\r\n        };\r\n      default:\r\n        return { labels: [], datasets: [] };\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false, // Hide legend in thumbnail\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: false, // Hide x-axis labels in thumbnail\r\n      },\r\n      y: {\r\n        display: false, // Hide y-axis labels in thumbnail\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-thumbnail\">\r\n      <Bar data={getChartData()} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartThumbnail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}